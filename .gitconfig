[alias]
    # Source: http://stackoverflow.com/questions/7066325/how-to-list-show-git-aliases#answer-7067489
    # Found on stackoverflow list all available aliases ==
    alias   =   config --get-regexp '^alias.*'

    s   =   status
    ss  =   status --short

    co  =   commit
    com =   commit --message
    coma    =   commit --all --message

    a   =   add
    aa  =   add --all

    # Source: https://ochronus.com/git-tips-from-the-trenches
    ds = diff --staged

    pr  =   pull --rebase

    branches    =   branch --all

    # Source: https://coderwall.com/p/euwpig?i=3&p=1&t=git
    # A better git log (subjective obviously)   ==
    lg          =    log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --

    # I do this often, need to see the last x number of commits ==
    logn    =    log --max-count

    # Source: http://stackoverflow.com/questions/1486819/which-git-commit-stats-are-easy-to-pull
    # Show running total of number of commits per dev   ==
    winning =   shortlog --summary --numbered --email

    # Source: http://oli.jp/2012/git-powerup/
    # The repositories running total of commits ==
    total-commits = git log --all --pretty=oneline | wc -l

    # Came from Conor Carr of Pilz Ireland  ==
    incoming    =   !git remote update --prune; git log ..@{upstream}
    outgoing    =   log @{upstream}..

    # Source: http://stackoverflow.com/a/3338774/1367612
    unpushed    =   log --branches --not --remotes --decorate=full --oneline

    # Wipe out all local changes you have made, be careful! ==
    wipelc  =   checkout .

    # Source: http://stackoverflow.com/a/8858853
    # Source: http://stackoverflow.com/a/12142066
    # Print the associated description of a branch. ==
    # Set descriptions with git branch --edit-description   ==
    description =   !git config branch.`git rev-parse --abbrev-ref HEAD`.description

    describeall = !~/list_all_branch_descriptions.sh

[core]
  # Use sublime as your default git editor
  # http://stackoverflow.com/questions/8951275/git-config-core-editor-how-to-make-sublime-text-the-default-editor-for-git-on#answer-9408117
  editor = 'C:/Program Files/Sublime Text 2/sublime_text.exe' --wait --new-window
